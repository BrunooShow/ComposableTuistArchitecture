import ComposableArchitecture
import ComposableTuistArchitectureSupport

typealias {{ name }}State = ()

public enum {{ name }}Action: Equatable {}

struct {{ name }}Environment {
}

let {{ name|lowercase }}Reducer = Reducer<{{ name }}State, {{ name }}Action, {{ name }}Environment> { state, action, environment in
    switch action {
        
    }
}

extension {{ name }}FeatureAction {
    init(_ {{ name|lowercase }}Action: {{ name }}Action) {
        switch {{ name|lowercase }}Action {
            
        }
    }
}
